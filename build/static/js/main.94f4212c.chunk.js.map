{"version":3,"sources":["atomy.js","components/form.js","components/grid.js","components/Header2.js","App.js","reportWebVitals.js","index.js"],"names":["triggered","atom","key","default","useStyles","makeStyles","theme","root","margin","spacing","width","minWidth","title","fontSize","pos","marginBottom","SimpleCard","location","highlighted","classes","String","color","textcolor","useRecoilState","trigger","changeTrigger","useState","myValue1","setValue","myValue2","setValue2","Card","className","CardContent","style","backgroundColor","CardActions","class","TextField","type","value","onChange","event","target","id","label","InputProps","disableUnderline","flexGrow","paper","height","control","padding","SpacingGrid","rows","cols","highlightedeqs","highlights","setHighlights","useEffect","highlightstolist1","split","highlightstolist2","elem","includes","colonindex","indexOf","pushtolist21","replace","colonindex2","pushtolist22","push","highlightstolist3","forEach","element","replaceAll","highlightstolist4","props","children","highlightstolist5","templist","templist2","templist3","el","parseFloat","highlightstolist6","highlightstolist7","arr","len","chunks","i","n","length","slice","arraychunk","converttohighlights","sendHighlightsToForm","highlightedlocations","console","log","colMap","Array","from","keys","gridContainer","Grid","container","wrap","justify","map","item","createStyles","menuButton","marginRight","DenseAppBar","AppBar","position","Toolbar","variant","Typography","App","setRows","setCols","eqresponse","setEqResponse","setHighlightedEqs","axios","require","values","document","getElementsByClassName","matrixdict","method","url","data","then","response","highlightedeqtostate","toString","generateHighlightedEqs","catch","error","minusRowsState","setMinusRowsState","minusColsState","setMinusColsState","Button","onClick","display_array_prediv","display_array_postdiv","displayeqs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2SAEaA,EAAYC,YAAK,CAC5BC,IAAK,UACLC,SAAS,I,OCMLC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,QAETC,SAAU,IAEZC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,QAIH,SAASC,EAAT,GAAgD,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACvCC,EAAUf,IAIhB,GAAIgB,OAAOF,KAAiBE,OAAOH,GACjC,IAAII,EAAQ,YACRC,EAAY,aAIhB,GAFAD,EAAQ,QACRC,EAAY,SACQ,IAAhBJ,OAGe,QAIrB,MAAiCK,YAAevB,GAAhD,mBAAOwB,EAAP,KAAgBC,EAAhB,KAYA,EAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,OACE,8BACE,cAACC,EAAA,EAAD,CAAMC,UAAWb,EAAQZ,KAAzB,SACE,cAAC0B,EAAA,EAAD,CAAaC,MAAO,CAAEC,gBAAiBd,EAAOA,MAAOC,GAArD,SACE,eAACc,EAAA,EAAD,WACE,oCACA,qBAAKC,MAAM,eAAX,SAEI,+BACE,cAACC,EAAA,EAAD,CACEC,KAAK,SACLP,UAAU,YACVQ,MAAOb,EACPc,SA1BG,SAACC,GACpBd,EAASc,EAAMC,OAAOH,OACtBf,GAAeD,IAyBCoB,GAAI3B,EAAW,WACf4B,MAAM,GACNC,WAAY,CAAEC,kBAAkB,SAZ1C,IAkBE,qBAAKV,MAAM,eAAX,SAEI,+BACE,cAACC,EAAA,EAAD,CACEC,KAAK,SACLP,UAAU,YACVQ,MAAOX,EACPY,SArCI,SAACC,GACrBZ,EAAUY,EAAMC,OAAOH,OACvBf,GAAeD,IAoCCoB,GAAI3B,EAAW,WACf4B,MAAM,GACNC,WAAY,CAAEC,kBAAkB,SAKxC,6CC1FZ,IAAM3C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJyC,SAAU,GAEZC,MAAO,CACLC,OAAQ,IACRxC,MAAO,KAETyC,QAAS,CACPC,QAAS9C,EAAMG,QAAQ,QAIZ,SAAS4C,EAAT,GAAsD,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,eAChD,EAAoC9B,mBAAS,MAA7C,mBAAO+B,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRD,EAeF,SAA6BF,GAC3B,GAAuB,OAAnBA,EAAyB,CAC3B,IAAII,EAAoBJ,EAAeK,MAAM,MACzCC,EAAoB,GACxB,IAAK,IAAIC,KAAQH,EACf,GAAIA,EAAkBG,GAAMC,SAAS,KAAM,CACzC,IAAIC,EAAaL,EAAkBG,GAAMG,QAAQ,KAC7CC,EAAeP,EAAkBG,GAAMK,QACzCR,EAAkBG,GAAME,EAAa,GACrC,IAEEI,EAAcF,EAAaD,QAAQ,KACnCI,EAAeH,EAAaC,QAC9BD,EAAaE,GACb,IAEFP,EAAkBS,KAAKD,QAEvBR,EAAkBS,KAAKX,EAAkBG,IAG7C,IAAIS,EAAoB,GACxBV,EAAkBW,SAAQ,SAACC,GAAD,OACxBF,EAAkBD,KAChB,8BACGG,EACEC,WAAW,IAAK,IAChBA,WAAW,IAAK,IAChBA,WAAW,IAAK,IAChBA,WAAW,IAAK,IAChBA,WAAW,IAAK,UAIzB,IAAIC,EAAoB,GACxB,IAAKb,KAAQS,EACXI,EAAkBL,KAAKC,EAAkBT,GAAMc,MAAMC,UAEvD,IAAIC,EAAoB,GACxB,IAAKhB,KAAQa,EAAmB,CAC9B,IAAII,EAAW,GACfA,EAAST,KAAKK,EAAkBb,GAAMF,MAAM,MAC5C,IAAIoB,EAAY,GAChB,IAAKlB,KAAQiB,EAAU,CACrB,IAAIE,EAAY,GAChB,IAAK,IAAIC,KAAMH,EAASjB,GACtBmB,EAAUX,KAAKa,WAAWJ,EAASjB,GAAMoB,KAE3CF,EAAUV,KAAKW,GAEjBH,EAAkBR,KAAKU,GAEzB,IAAII,EAAoB,GACxB,IAAKtB,KAAQgB,EACPA,EAAkBhB,GAAM,GAAGC,SAAS,IACtCqB,EAAkBd,KAAKQ,EAAkBhB,GAAM,GAAGG,QAAQ,IAG9D,IAAIoB,EApER,SAAoBC,EAAKC,GACvB,IAAIC,EAAS,GACXC,EAAI,EACJC,EAAIJ,EAAIK,OACV,KAAOF,EAAIC,GACTF,EAAOlB,KAAKgB,EAAIM,MAAMH,EAAIA,GAAKF,IAEjC,OAAOC,EA6DmBK,CAAWT,EAAmB,GAExD,OAAOC,EA3EOS,CAAoBvC,MACjC,CAACA,IA6EJ,IAAMrC,EAAUf,IAEhB,SAAS4F,EAAqBN,EAAGlD,GAC/B,IAAIyD,EAAuB,GAC3B,IAAK,IAAIV,KAAO9B,EACdyC,QAAQC,IAAI,SACR1C,EAAW8B,GAAK,KAAOG,GAAKjC,EAAW8B,GAAK,KAAO/C,GACrDyD,EAAqB1B,KAAK,MAAQnD,OAAOsE,GAAK,MAAQtE,OAAOoB,IAGjE,OAAOyD,EAMT,IAHA,IAAIG,EAASC,MAAMC,KAAKD,MAAM9C,GAAMgD,QAEhCC,EAAgB,GACXd,EAAI,EAAGA,EAAIpC,EAAMoC,IACxBc,EAAcjC,KACZ,8BACE,cAACkC,EAAA,EAAD,CAAMC,WAAS,EAAC1E,UAAWb,EAAQZ,KAAME,QAAS,EAAGmC,GAAI,MAAQ8C,EAAjE,SACE,cAACe,EAAA,EAAD,CAAMC,WAAS,EAACC,KAAK,SAASC,QAAQ,SAAtC,SACGR,EAAOS,KAAI,SAACrE,GAAD,OACV,cAACiE,EAAA,EAAD,CAAkB7D,GAAI,MAAQ8C,EAAI,MAAQlD,EAAOsE,MAAI,EAArD,SACE,cAAC,EAAD,CACE7F,SAAU,MAAQyE,EAAI,MAAQlD,EAC9BtB,YAAa8E,EAAqBN,EAAGlD,MAH9BA,aAavB,OAAOgE,E,+DChIHpG,EAAYC,aAAW,SAACC,GAAD,OAC3ByG,YAAa,CACXxG,KAAM,CACJyC,SAAU,GAEZgE,WAAY,CACVC,YAAa3G,EAAMG,QAAQ,SAKlB,SAASyG,IACtB,IAAM/F,EAAUf,IAEhB,OACE,qBAAK4B,UAAWb,EAAQZ,KAAxB,SACE,cAAC4G,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,CAASC,QAAQ,QAAjB,SACE,cAACC,EAAA,EAAD,CAAYD,QAAQ,KAAKjG,MAAM,UAA/B,SACE,iGC6IGmG,MA5Jf,WACE,MAAwB9F,mBAAS,GAAjC,mBAAO4B,EAAP,KAAamE,EAAb,KACA,EAAwB/F,mBAAS,GAAjC,mBAAO6B,EAAP,KAAamE,EAAb,KAEA,EAAoChG,mBAAS,MAA7C,mBAAOiG,EAAP,KAAmBC,EAAnB,KAEA,EAA4ClG,mBAAS,MAArD,mBAAO8B,EAAP,KAAuBqE,EAAvB,KAEMrG,EAAUD,YAAevB,GAEzB8H,EAAQC,EAAQ,IAsCtBpE,qBAAU,WACR,IAAIqE,EAASC,SAASC,uBACpB,qCAKEC,EAAa,GACjB,IAAK,IAAIzC,KAAKsC,EACQ,MAAhBA,EAAOtC,GAAG9C,IAAiC,MAAnBoF,EAAOtC,GAAGlD,OACpC2F,EAAW5D,KAAK,CACdtD,SAAU+G,EAAOtC,GAAG9C,GACpBJ,MAAOwF,EAAOtC,GAAGlD,QAMvBsF,EAAM,CACJM,OAAQ,OACRC,IAAK,uCACLC,KAAM,CAAEH,gBAEPI,MAAK,SAAUC,GAEdZ,EAAcY,EAASF,MACvBT,EAvCN,SAAgCS,GAC9B,GAAY,MAARA,EAAc,CAEhB,IAIIG,EAAuB,IAJNH,EAAKzE,MAAM,KACM,GAAG6E,WAIzCD,EAAuBA,EAAqB5C,MAAM,GAAI,GAExD,OAAO4C,EA6BeE,CAAuBH,EAASF,UAEnDM,OAAM,SAAUC,GAEfjB,EAAc,0CAEjB,CAACpG,IAEJ,MAA4CE,oBAAU,GAAtD,mBAAOoH,EAAP,KAAuBC,EAAvB,KACA,EAA4CrH,oBAAU,GAAtD,mBAAOsH,EAAP,KAAuBC,EAAvB,KAkBA,OAhBAtF,qBAAU,WACJL,EAAO,GAAKC,EAAO,GACrBwF,GAAmB,GACnBE,GAAmB,IACV3F,EAAO,GAAKC,GAAQ,GAC7B0F,EAAkB,GAClBF,GAAmB,IACVzF,GAAQ,GAAKC,EAAO,GAC7BwF,EAAkB,GAClBE,GAAmB,KAEnBF,EAAkB,GAClBE,EAAkB,MAEnB,CAAC3F,EAAMC,IAGR,sBAAKvB,UAAU,MAAf,UACE,8BACE,cAAC,EAAD,MAEF,uBACA,cAAC,EAAD,CAAMsB,KAAMA,EAAMC,KAAMA,EAAMC,eAAgBA,IAC9C,uBACA,gCACE,sBAAKxB,UAAU,WAAf,UACE,wCADF,OAGE,cAACkH,EAAA,EAAD,CACE5B,QAAQ,YACRjG,MAAM,YACN8H,QAAS,kBAAM1B,EAAQnE,EAAOwF,IAHhC,eAOA,cAACI,EAAA,EAAD,CACE5B,QAAQ,YACRjG,MAAM,UACN8H,QAAS,kBAAM1B,EAAQnE,EAAO,IAHhC,kBAQF,sBAAKtB,UAAU,WAAf,UACE,uCADF,OAGE,cAACkH,EAAA,EAAD,CACE5B,QAAQ,YACRjG,MAAM,YACN8H,QAAS,kBAAMzB,EAAQnE,EAAOyF,IAHhC,eAOA,cAACE,EAAA,EAAD,CACE5B,QAAQ,YACRjG,MAAM,UACN8H,QAAS,kBAAMzB,EAAQnE,EAAO,IAHhC,kBAQF,uBACA,8BACE,6BAxIR,SAAoB+E,GAClB,GAAa,OAATA,EAAe,CAEjB,IAGIc,EAHiBd,EAAKzE,MAAM,KACM,GAAG6E,WAEG7E,MAAM,MAE9CwF,EAAwB,GAC5BD,EAAqB3E,SAAQ,SAACC,GAAD,OAC3B2E,EAAsB9E,KACpB,8BACGG,EACEC,WAAW,IAAK,IAChBA,WAAW,IAAK,IAChBA,WAAW,IAAK,UAK3B,OAAO0E,EAoHIC,CAAW3B,UA9CtB,YCtGW4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJhC,SAASiC,eAAe,SAM1BX,M","file":"static/js/main.94f4212c.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\nexport const triggered = atom({\n  key: \"trigger\", // unique ID (with respect to other atoms/selectors)\n  default: false, // default value (aka initial value)\n});\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport red from \"@material-ui/core/colors/red\";\nimport { triggered } from \"../atomy.js\";\nimport { useRecoilState } from \"recoil\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(0),\n      width: \"12ch\",\n    },\n    minWidth: 40,\n  },\n  title: {\n    fontSize: 11,\n  },\n  pos: {\n    marginBottom: 10,\n  },\n}));\n\nexport default function SimpleCard({ location, highlighted }) {\n  const classes = useStyles();\n\n  //console.log(highlighted + location);\n\n  if (String(highlighted) === String(location)) {\n    var color = \"limegreen\";\n    var textcolor = \"white\";\n  } else {\n    color = \"white\";\n    textcolor = \"black\";\n    if (highlighted === true) {\n      var highlightcolor = \"blue\";\n    } else {\n      highlightcolor = \"white\";\n    }\n  }\n\n  const [trigger, changeTrigger] = useRecoilState(triggered);\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    changeTrigger(!trigger);\n  };\n\n  const handleChange2 = (event) => {\n    setValue2(event.target.value);\n    changeTrigger(!trigger);\n  };\n\n  const [myValue1, setValue] = useState(\"\");\n  const [myValue2, setValue2] = useState(\"\");\n\n  return (\n    <div>\n      <Card className={classes.root}>\n        <CardContent style={{ backgroundColor: color, color: textcolor }}>\n          <CardActions>\n            <div>(</div>\n            <div class=\"form-control\">\n              {\n                <form>\n                  <TextField\n                    type=\"number\"\n                    className=\"formvalue\"\n                    value={myValue1}\n                    onChange={handleChange}\n                    id={location + \"subform1\"}\n                    label=\"\"\n                    InputProps={{ disableUnderline: true }}\n                  />\n                </form>\n              }\n            </div>\n            ,\n            <div class=\"form-control\">\n              {\n                <form>\n                  <TextField\n                    type=\"number\"\n                    className=\"formvalue\"\n                    value={myValue2}\n                    onChange={handleChange2}\n                    id={location + \"subform2\"}\n                    label=\"\"\n                    InputProps={{ disableUnderline: true }}\n                  />\n                </form>\n              }\n            </div>\n            <div>)</div>\n          </CardActions>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import \"./grid.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Form from \"./form.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(5),\n  },\n}));\n\nexport default function SpacingGrid({ rows, cols, highlightedeqs }) {\n  const [highlights, setHighlights] = useState(null);\n\n  useEffect(() => {\n    setHighlights(converttohighlights(highlightedeqs));\n  }, [highlightedeqs]);\n\n  //console.log(highlights);\n\n  function arraychunk(arr, len) {\n    var chunks = [],\n      i = 0,\n      n = arr.length;\n    while (i < n) {\n      chunks.push(arr.slice(i, (i += len)));\n    }\n    return chunks;\n  }\n\n  function converttohighlights(highlightedeqs) {\n    if (highlightedeqs !== null) {\n      var highlightstolist1 = highlightedeqs.split(\"],\");\n      var highlightstolist2 = [];\n      for (var elem in highlightstolist1) {\n        if (highlightstolist1[elem].includes(\":\")) {\n          var colonindex = highlightstolist1[elem].indexOf(\":\");\n          var pushtolist21 = highlightstolist1[elem].replace(\n            highlightstolist1[elem][colonindex - 1],\n            \"\"\n          );\n          var colonindex2 = pushtolist21.indexOf(\":\");\n          var pushtolist22 = pushtolist21.replace(\n            pushtolist21[colonindex2],\n            \"\"\n          );\n          highlightstolist2.push(pushtolist22);\n        } else {\n          highlightstolist2.push(highlightstolist1[elem]);\n        }\n      }\n      var highlightstolist3 = [];\n      highlightstolist2.forEach((element) =>\n        highlightstolist3.push(\n          <div>\n            {element\n              .replaceAll(\"[\", \"\")\n              .replaceAll(\"]\", \"\")\n              .replaceAll(\"{\", \"\")\n              .replaceAll(\"}\", \"\")\n              .replaceAll(\" \", \"\")}\n          </div>\n        )\n      );\n      var highlightstolist4 = [];\n      for (elem in highlightstolist3) {\n        highlightstolist4.push(highlightstolist3[elem].props.children);\n      }\n      var highlightstolist5 = [];\n      for (elem in highlightstolist4) {\n        var templist = [];\n        templist.push(highlightstolist4[elem].split(\",\"));\n        var templist2 = [];\n        for (elem in templist) {\n          var templist3 = [];\n          for (var el in templist[elem]) {\n            templist3.push(parseFloat(templist[elem][el]));\n          }\n          templist2.push(templist3);\n        }\n        highlightstolist5.push(templist2);\n      }\n      var highlightstolist6 = [];\n      for (elem in highlightstolist5) {\n        if (highlightstolist5[elem][0].includes(1)) {\n          highlightstolist6.push(highlightstolist5[elem][0].indexOf(1));\n        }\n      }\n      var highlightstolist7 = arraychunk(highlightstolist6, 2);\n    }\n    return highlightstolist7;\n  }\n\n  const classes = useStyles();\n\n  function sendHighlightsToForm(i, value) {\n    var highlightedlocations = [];\n    for (var arr in highlights) {\n      console.log(\"noice\");\n      if (highlights[arr][0] === i && highlights[arr][1] === value) {\n        highlightedlocations.push(\"row\" + String(i) + \"col\" + String(value));\n      }\n    }\n    return highlightedlocations;\n  }\n\n  var colMap = Array.from(Array(cols).keys());\n\n  var gridContainer = [];\n  for (var i = 0; i < rows; i++) {\n    gridContainer.push(\n      <div>\n        <Grid container className={classes.root} spacing={1} id={\"row\" + i}>\n          <Grid container wrap=\"nowrap\" justify=\"center\">\n            {colMap.map((value) => (\n              <Grid key={value} id={\"row\" + i + \"col\" + value} item>\n                <Form\n                  location={\"row\" + i + \"col\" + value}\n                  highlighted={sendHighlightsToForm(i, value)}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n\n  return gridContainer;\n}\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n  })\n);\n\nexport default function DenseAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" color=\"inherit\">\n            <h1>Welcome to NashCalc: The Intuitive Way to Game Theorize</h1>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport Grid from \"./components/grid.js\";\nimport { GridMap } from \"./components/gridmap.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { triggered } from \"./atomy.js\";\nimport { useRecoilState } from \"recoil\";\nimport axios from \"axios\";\nimport Header2 from \"./components/Header2.js\";\n\n/* eslint-disable no-unused-expressions */\n\nfunction App() {\n  const [rows, setRows] = useState(2);\n  const [cols, setCols] = useState(2);\n\n  const [eqresponse, setEqResponse] = useState(null);\n\n  const [highlightedeqs, setHighlightedEqs] = useState(null);\n\n  const trigger = useRecoilState(triggered);\n\n  const axios = require(\"axios\");\n\n  function displayeqs(data) {\n    if (data !== null) {\n      //removing content from api for human readable output\n      var firstelemslist = data.split(\"{\");\n      var firstelemsstring = firstelemslist[0].toString();\n\n      var display_array_prediv = firstelemsstring.split(\"],\");\n      //console.log(display_array_prediv);\n      var display_array_postdiv = [];\n      display_array_prediv.forEach((element) =>\n        display_array_postdiv.push(\n          <div>\n            {element\n              .replaceAll(\"[\", \"\")\n              .replaceAll(\"'\", \"\")\n              .replaceAll(\"]\", \"\")}\n          </div>\n        )\n      );\n    }\n    return display_array_postdiv;\n  }\n\n  function generateHighlightedEqs(data) {\n    if (data != null) {\n      //removing content from api for human readable output\n      var firstelemslist = data.split(\"{\");\n      var firstelemsstring = firstelemslist[1].toString();\n      //passing formatted output dictionary to useState hook for use\n      //in highlighting equilibria\n      var highlightedeqtostate = \"{\" + firstelemsstring;\n      highlightedeqtostate = highlightedeqtostate.slice(0, -1);\n    }\n    return highlightedeqtostate;\n  }\n\n  useEffect(() => {\n    var values = document.getElementsByClassName(\n      \"MuiInputBase-input MuiInput-input\"\n    );\n    //this is where we send post to api instead of console log\n    //we've managed to make [trigger] in recoil atom update every time a\n    //new character is added or removed in any form\n    var matrixdict = [];\n    for (var i in values) {\n      if (values[i].id != null && values[i].value != null) {\n        matrixdict.push({\n          location: values[i].id,\n          value: values[i].value,\n        });\n      }\n    }\n\n    //console.log(JSON.stringify(matrixdict));\n    axios({\n      method: \"POST\",\n      url: \"https://nash-calc.herokuapp.com/test\",\n      data: { matrixdict },\n    })\n      .then(function (response) {\n        //these could be made into a shorter pair of functions\n        setEqResponse(response.data);\n        setHighlightedEqs(generateHighlightedEqs(response.data));\n      })\n      .catch(function (error) {\n        //console.log(error);\n        setEqResponse(\"Please complete the payoff matrix\");\n      });\n  }, [trigger]);\n\n  const [minusRowsState, setMinusRowsState] = useState(-1);\n  const [minusColsState, setMinusColsState] = useState(-1);\n\n  useEffect(() => {\n    if (rows > 1 && cols > 1) {\n      setMinusRowsState(-1);\n      setMinusColsState(-1);\n    } else if (rows > 1 && cols <= 1) {\n      setMinusColsState(0);\n      setMinusRowsState(-1);\n    } else if (rows <= 1 && cols > 1) {\n      setMinusRowsState(0);\n      setMinusColsState(-1);\n    } else {\n      setMinusRowsState(0);\n      setMinusColsState(0);\n    }\n  }, [rows, cols]);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Header2 />\n      </div>\n      <br></br>\n      <Grid rows={rows} cols={cols} highlightedeqs={highlightedeqs} />\n      <br></br>\n      <div>\n        <div className=\"rowStyle\">\n          <h2>Rows: </h2>\n          &nbsp;\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => setRows(rows + minusRowsState)}\n          >\n            -\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setRows(rows + 1)}\n          >\n            +\n          </Button>\n        </div>\n        <div className=\"rowStyle\">\n          <h2>Cols:</h2>\n          &nbsp;\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => setCols(cols + minusColsState)}\n          >\n            -\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setCols(cols + 1)}\n          >\n            +\n          </Button>\n        </div>\n        <br></br>\n        <div>\n          <h2>{displayeqs(eqresponse)}</h2>\n        </div>\n      </div>\n      Noice\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}